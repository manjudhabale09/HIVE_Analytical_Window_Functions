window_function ( ) 
OVER ( [ PARTITION BY partition_list ] [ ORDER BY order_list] )
 
 

CREATE TABLE Orders(
order_id INT,order_date DATE,customer_name STRING,city STRING,order_amount int);
 
INSERT INTO  Orders 
SELECT '1001','2017-04-01','David Smith','GuildFord',10000
UNION ALL	  
SELECT '1002','2017-04-02','David Jones','Arlington',20000
UNION ALL	  
SELECT '1003','2017-04-03','John Smith','Shalford',5000
UNION ALL	  
SELECT '1004','2017-04-04','Michael Smith','GuildFord',15000
UNION ALL	  
SELECT '1005','2017-04-05','David Williams','Shalford',7000
UNION ALL	  
SELECT '1006','2017-04-06','Paum Smith','GuildFord',25000
UNION ALL	 
SELECT '1007','2017-04-10','Andrew Smith','Arlington',15000
UNION ALL	  
SELECT '1008','2017-04-11','David Brown','Arlington',2000
UNION ALL	  
SELECT '1009','2017-04-20','Robert Smith','Shalford',1000
UNION ALL	  
SELECT '1010','2017-04-25','Peter Smith','GuildFord',500;

+-----------------+-----------------+-----------------+--------------+-----------------+
| orders.order_id | orders.order_date | orders.customer_name | orders.city  | orders.order_amount |
+-----------------+-----------------+-----------------+--------------+-----------------+
| 1001            | 2017-04-01      | David Smith     | GuildFord    | 10000           |
| 1010            | 2017-04-25      | Peter Smith     | GuildFord    | 500             |
| 1002            | 2017-04-02      | David Jones     | Arlington    | 20000           |
| 1003            | 2017-04-03      | John Smith      | Shalford     | 5000            |
| 1004            | 2017-04-04      | Michael Smith   | GuildFord    | 15000           |
| 1005            | 2017-04-05      | David Williams  | Shalford     | 7000            |
| 1006            | 2017-04-06      | Paum Smith      | GuildFord    | 25000           |
| 1007            | 2017-04-10      | Andrew Smith    | Arlington    | 15000           |
| 1008            | 2017-04-11      | David Brown     | Arlington    | 2000            |
| 1009            | 2017-04-20      | Robert Smith    | Shalford     | 1000            |
+-----------------+-----------------+-----------------+--------------+-----------------+


------------------------
regular  SUM()

SELECT city, SUM(order_amount) total_order_amount
FROM  Orders  GROUP BY city;


+------------+-----------------+
|    city    | total_order_amount |
+------------+-----------------+
| Arlington  | 37000           |
| Shalford   | 13000           |
| GuildFord  | 50500           |
+------------+-----------------+


 ---- window SUM() Aggrigate------
SELECT order_id, order_date, customer_name, city, order_amount
 ,SUM(order_amount) OVER(PARTITION BY city) as grand_total 
FROM Orders


+-----------+-------------+-----------------+------------+---------------+--------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | grand_total  |
+-----------+-------------+-----------------+------------+---------------+--------------+
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 37000        |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 37000        |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 37000        |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 13000        |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 13000        |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 13000        |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 50500        |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 50500        |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 50500        |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 50500        |
+-----------+-------------+-----------------+------------+---------------+--------------+


-----------------

AVG()

SELECT order_id, order_date, customer_name, city, order_amount
 ,AVG(order_amount) OVER(PARTITION BY city, MONTH(order_date)) as   average_order_amount 
FROM Orders;

+-----------+-------------+-----------------+------------+---------------+-----------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | average_order_amount |
+-----------+-------------+-----------------+------------+---------------+-----------------+
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 12625.0         |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 12625.0         |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 12625.0         |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 12625.0         |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 4333.333333333333 |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 4333.333333333333 |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 4333.333333333333 |
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 12333.333333333334 |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 12333.333333333334 |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 12333.333333333334 |
+-----------+-------------+-----------------+------------+---------------+-----------------+


-------------------

MIN()

SELECT order_id, order_date, customer_name, city, order_amount
 ,MIN(order_amount) OVER(PARTITION BY city) as minimum_order_amount 
FROM Orders;

+-----------+-------------+-----------------+------------+---------------+-----------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | minimum_order_amount |
+-----------+-------------+-----------------+------------+---------------+-----------------+
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 2000            |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 2000            |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 2000            |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 1000            |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 1000            |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 1000            |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 500             |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 500             |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 500             |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 500             |
+-----------+-------------+-----------------+------------+---------------+-----------------+


MAX()

SELECT order_id, order_date, customer_name, city, order_amount
 ,MAX(order_amount) OVER(PARTITION BY city) as maximum_order_amount 
FROM Orders;

+-----------+-------------+-----------------+------------+---------------+-----------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | maximum_order_amount |
+-----------+-------------+-----------------+------------+---------------+-----------------+
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 20000           |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 20000           |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 20000           |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 7000            |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 7000            |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 7000            |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 25000           |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 25000           |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 25000           |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 25000           |
+-----------+-------------+-----------------+------------+---------------+-----------------+


--------------

COUNT()

SELECT city,COUNT(DISTINCT customer_name) number_of_customers
FROM Orders 
GROUP BY city;


+------------+-----------------+
|    city    | number_of_customers |
+------------+-----------------+
| Arlington  | 3               |
| GuildFord  | 4               |
| Shalford   | 3               |
+------------+-----------------+



SELECT order_id, order_date, customer_name, city, order_amount
 ,COUNT(order_id) OVER(PARTITION BY city) as total_orders
FROM Orders;


+-----------+-------------+-----------------+------------+---------------+---------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | total_orders  |
+-----------+-------------+-----------------+------------+---------------+---------------+
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 3             |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 3             |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 3             |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 3             |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 3             |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 3             |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 4             |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 4             |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 4             |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 4             |
+-----------+-------------+-----------------+------------+---------------+---------------+


------Ranking Window Functions----------
RANK()


SELECT order_id,order_date,customer_name,city, order_amount,
RANK() OVER(ORDER BY order_amount DESC)
FROM Orders;

+-----------+-------------+-----------------+------------+---------------+----------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | RANK_window_0  |
+-----------+-------------+-----------------+------------+---------------+----------------+
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 1              |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 2              |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 3              |
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 3              |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 5              |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 6              |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 7              |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 8              |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 9              |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 10             |
+-----------+-------------+-----------------+------------+---------------+----------------+

insert into orders 
SELECT '1011','2017-04-23','Ani Smitha','GuildFord',25000;



SELECT order_id,order_date,customer_name,city, order_amount,
RANK() OVER(PARTITION BY city ORDER BY order_amount DESC)
FROM Orders;


+-----------+-------------+-----------------+------------+---------------+----------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | RANK_window_0  |
+-----------+-------------+-----------------+------------+---------------+----------------+
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 1              |
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 2              |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 3              |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 1              |
| 1011      | 2017-04-23  | Ani Smitha      | GuildFord  | 25000         | 1              |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 3              |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 4              |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 5              |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 1              |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 2              |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 3              |
+-----------+-------------+-----------------+------------+---------------+----------------+


------------------------------------------



DENSE_RANK()

SELECT order_id,order_date,customer_name,city, order_amount,
DENSE_RANK() OVER(ORDER BY order_amount DESC)
FROM Orders;

+-----------+-------------+-----------------+------------+---------------+-----------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | DENSE_RANK_window_0 |
+-----------+-------------+-----------------+------------+---------------+-----------------+
| 1011      | 2017-04-23  | Ani Smitha      | GuildFord  | 25000         | 1               |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 1               |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 2               |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 3               |
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 3               |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 4               |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 5               |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 6               |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 7               |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 8               |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 9               |
+-----------+-------------+-----------------+------------+---------------+-----------------+


ROW_NUMBER()

ROW_ NUMBER() without PARTITION BY

SELECT order_id,order_date,customer_name,city, order_amount,
ROW_NUMBER() OVER(ORDER BY order_id) as row_number
FROM Orders;

+-----------+-------------+-----------------+------------+---------------+-------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | row_number  |
+-----------+-------------+-----------------+------------+---------------+-------------+
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 1           |
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 2           |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 3           |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 4           |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 5           |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 6           |
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 7           |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 8           |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 9           |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 10          |
| 1011      | 2017-04-23  | Ani Smitha      | GuildFord  | 25000         | 11          |
+-----------+-------------+-----------------+------------+---------------+-------------+



ROW_NUMBER() with PARTITION BY

SELECT order_id,order_date,customer_name,city, order_amount,
ROW_NUMBER() OVER(PARTITION BY city ORDER BY order_amount DESC) as row_number
FROM Orders;
 

+-----------+-------------+-----------------+------------+---------------+-------------+
| order_id  | order_date  |  customer_name  |    city    | order_amount  | row_number  |
+-----------+-------------+-----------------+------------+---------------+-------------+
| 1002      | 2017-04-02  | David Jones     | Arlington  | 20000         | 1           |
| 1007      | 2017-04-10  | Andrew Smith    | Arlington  | 15000         | 2           |
| 1008      | 2017-04-11  | David Brown     | Arlington  | 2000          | 3           |
| 1006      | 2017-04-06  | Paum Smith      | GuildFord  | 25000         | 1           |
| 1011      | 2017-04-23  | Ani Smitha      | GuildFord  | 25000         | 2           |
| 1004      | 2017-04-04  | Michael Smith   | GuildFord  | 15000         | 3           |
| 1001      | 2017-04-01  | David Smith     | GuildFord  | 10000         | 4           |
| 1010      | 2017-04-25  | Peter Smith     | GuildFord  | 500           | 5           |
| 1005      | 2017-04-05  | David Williams  | Shalford   | 7000          | 1           |
| 1003      | 2017-04-03  | John Smith      | Shalford   | 5000          | 2           |
| 1009      | 2017-04-20  | Robert Smith    | Shalford   | 1000          | 3           |
+-----------+-------------+-----------------+------------+---------------+-------------+


------ Value Window Functions

LAG()

SELECT order_id,customer_name,city, order_amount,order_date,
 --in below line, 1 indicates check for previous row of the current row
 LAG(order_date,1) OVER(ORDER BY order_date) prev_order_date
FROM Orders;


+-----------+-----------------+------------+---------------+-------------+-----------------+
| order_id  |  customer_name  |    city    | order_amount  | order_date  | prev_order_date |
+-----------+-----------------+------------+---------------+-------------+-----------------+
| 1001      | David Smith     | GuildFord  | 10000         | 2017-04-01  | NULL            |
| 1002      | David Jones     | Arlington  | 20000         | 2017-04-02  | 2017-04-01      |
| 1003      | John Smith      | Shalford   | 5000          | 2017-04-03  | 2017-04-02      |
| 1004      | Michael Smith   | GuildFord  | 15000         | 2017-04-04  | 2017-04-03      |
| 1005      | David Williams  | Shalford   | 7000          | 2017-04-05  | 2017-04-04      |
| 1006      | Paum Smith      | GuildFord  | 25000         | 2017-04-06  | 2017-04-05      |
| 1007      | Andrew Smith    | Arlington  | 15000         | 2017-04-10  | 2017-04-06      |
| 1008      | David Brown     | Arlington  | 2000          | 2017-04-11  | 2017-04-10      |
| 1009      | Robert Smith    | Shalford   | 1000          | 2017-04-20  | 2017-04-11      |
| 1011      | Ani Smitha      | GuildFord  | 25000         | 2017-04-23  | 2017-04-20      |
| 1010      | Peter Smith     | GuildFord  | 500           | 2017-04-25  | 2017-04-23  
| 1010      | Peter Smith     | GuildFord  | 500           | 2017-04-25  | 2017-04-23     |
+-----------+-----------------+------------+---------------+-------------+-----------------+


LEAD()

SELECT order_id,customer_name,city, order_amount,order_date,
 --in below line, 1 indicates check for next row of the current row
 LEAD(order_date,1,) OVER(ORDER BY order_date) next_order_date
FROM Orders;



+-----------+-----------------+------------+---------------+-------------+-----------------+
| order_id  |  customer_name  |    city    | order_amount  | order_date  | next_order_date |
+-----------+-----------------+------------+---------------+-------------+-----------------+
| 1001      | David Smith     | GuildFord  | 10000         | 2017-04-01  | 2017-04-02      |
| 1002      | David Jones     | Arlington  | 20000         | 2017-04-02  | 2017-04-03      |
| 1003      | John Smith      | Shalford   | 5000          | 2017-04-03  | 2017-04-04      |
| 1004      | Michael Smith   | GuildFord  | 15000         | 2017-04-04  | 2017-04-05      |
| 1005      | David Williams  | Shalford   | 7000          | 2017-04-05  | 2017-04-06      |
| 1006      | Paum Smith      | GuildFord  | 25000         | 2017-04-06  | 2017-04-10      |
| 1007      | Andrew Smith    | Arlington  | 15000         | 2017-04-10  | 2017-04-11      |
| 1008      | David Brown     | Arlington  | 2000          | 2017-04-11  | 2017-04-20      |
| 1009      | Robert Smith    | Shalford   | 1000          | 2017-04-20  | 2017-04-23      |
| 1011      | Ani Smitha      | GuildFord  | 25000         | 2017-04-23  | 2017-04-25      |
| 1010      | Peter Smith     | GuildFord  | 500           | 2017-04-25  | NULL            |
+-----------+-----------------+------------+---------------+-------------+-----------------+

